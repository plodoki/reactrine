name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: "frontend/package-lock.json"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt
          pip install ruff black==25.1.0 isort mypy pre-commit
          cd frontend && npm ci

      - name: Start backend for API client generation
        run: |
          cd backend && python -m uvicorn app.main:app --host 0.0.0.0 --port 8000 &
          sleep 5
        env:
          ENVIRONMENT: test

      - name: Generate API client
        run: |
          cd frontend && npm run gen:api

      - name: Run backend linters and formatters
        run: |
          ruff check backend --config=pyproject.toml
          mypy backend
          black --check backend --config=pyproject.toml
          isort --check-only backend --settings-path=pyproject.toml

      - name: Run frontend linters and formatters
        run: |
          cd frontend
          npm run lint
          npx prettier --check .

      - name: Validate pre-commit hooks
        run: |
          pre-commit run --all-files

  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: "frontend/package-lock.json"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt
          pip install ruff black==25.1.0 isort mypy pre-commit
          cd frontend && npm ci

      - name: Run backend tests
        env:
          DATABASE_URL: postgresql+asyncpg://postgres:postgres@localhost:5432/test_db
          ENVIRONMENT: test
        run: |
          cd backend && python -m pytest app/tests -v

      - name: Start backend for API client generation
        run: |
          cd backend && python -m uvicorn app.main:app --host 0.0.0.0 --port 8000 &
          sleep 5
        env:
          DATABASE_URL: postgresql+asyncpg://postgres:postgres@localhost:5432/test_db
          ENVIRONMENT: test

      - name: Generate API client
        run: |
          cd frontend && npm run gen:api

      - name: Run frontend tests
        run: |
          cd frontend && npm test
        env:
          # Set UTF-8 locale for consistent character encoding
          LC_ALL: en_US.UTF-8
          LANG: en_US.UTF-8
