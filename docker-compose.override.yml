# syntax=docker/dockerfile:1.7

# Development environment overrides
# This file is automatically loaded by Docker Compose in development
# Contains development-specific configuration that extends docker-compose.yml

services:
  postgres:
    env_file:
      - config/dev.env
    environment:
      # Development-specific database name
      POSTGRES_DB: ${POSTGRES_DB:-app}

  backend:
    build:
      dockerfile: docker/development/backend.Dockerfile
    volumes:
      - ./backend:/app
    ports:
      - '8000:8000'
    env_file:
      - config/dev.env
    environment:
      # Development-specific runtime config
      - ALLOWED_ORIGINS_STR=http://localhost:3000
      - ENVIRONMENT=development

  frontend:
    build:
      dockerfile: docker/development/frontend.Dockerfile
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules
    ports:
      - '3000:3000'
    environment:
      - VITE_API_URL=http://localhost:8000
      - CHOKIDAR_USEPOLLING=true
    healthcheck:
      test: ['CMD-SHELL', 'curl -f http://localhost:3000 || exit 1']
      interval: 30s
      timeout: 10s
      retries: 3

  worker:
    build:
      context: .
      dockerfile: docker/development/backend.Dockerfile
      secrets:
        - pip_extra_index_url
    command: /start-celeryworker.sh
    volumes:
      - ./backend:/app
    env_file:
      - config/common.env
      - config/dev.env
    secrets:
      - postgres_password
      - secret_key
      - session_secret_key
      - openai_api_key
      - openrouter_api_key
      - aws_access_key_id
      - aws_secret_access_key
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    restart: unless-stopped

  # Optional observability service (can be enabled with --profile observability)
  flower:
    image: mher/flower:2.0
    command: celery flower --broker=redis://redis:6379/0
    ports:
      - '5555:5555'
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
    depends_on:
      - redis
    profiles:
      - observability

volumes:
  frontend_node_modules:

networks:
  default:
    name: app-dev-network
