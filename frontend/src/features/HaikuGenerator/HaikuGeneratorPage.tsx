import { useHaikuGenerator } from '@/features/HaikuGenerator/hooks/useHaikuGenerator';
import {
  Alert,
  Box,
  Button,
  CircularProgress,
  Grid,
  Paper,
  TextField,
  Typography,
} from '@mui/material';
import React, { useState } from 'react';

const HaikuGeneratorPage = () => {
  const [topic, setTopic] = useState('');
  const { mutate, data, isPending, isError, error } = useHaikuGenerator();

  const handleSubmit = (event: React.FormEvent) => {
    event.preventDefault();
    const trimmedTopic = topic.trim();
    if (trimmedTopic) {
      mutate({ topic: trimmedTopic });
    }
  };

  return (
    <Box sx={{ p: 3, width: '100%' }}>
      <Paper sx={{ p: 4, mt: 4 }}>
        <Typography variant="h4" component="h1" gutterBottom align="center">
          Haiku Generator
        </Typography>
        <Typography variant="body1" align="center" sx={{ mb: 4 }}>
          Enter a topic below and let our AI create a beautiful haiku for you.
        </Typography>

        <Box component="form" onSubmit={handleSubmit} noValidate>
          <Grid container spacing={2} alignItems="center" justifyContent="center">
            <Grid item xs={12} sm={9}>
              <TextField
                fullWidth
                label="Haiku Topic"
                value={topic}
                onChange={e => setTopic(e.target.value)}
                variant="outlined"
                required
              />
            </Grid>
            <Grid item xs={12} sm={3}>
              <Button
                type="submit"
                fullWidth
                variant="contained"
                size="large"
                disabled={isPending || !topic.trim()}
                sx={{ height: '56px' }}
              >
                {isPending ? <CircularProgress size={24} /> : 'Generate'}
              </Button>
            </Grid>
          </Grid>
        </Box>

        {isError && (
          <Alert severity="error" sx={{ mt: 4 }}>
            {error instanceof Error ? error.message : 'An unexpected error occurred.'}
          </Alert>
        )}

        {data &&
          data.lines &&
          data.syllables &&
          data.lines.length > 0 &&
          data.syllables.length > 0 &&
          data.lines.length === data.syllables.length && (
            <Box sx={{ mt: 4, textAlign: 'center' }}>
              <Typography variant="h5" component="h2" gutterBottom>
                Your Haiku
              </Typography>
              <Paper
                elevation={2}
                sx={{ p: 3, display: 'inline-block', minWidth: '300px' }}
              >
                {data.lines.map((line, index) => (
                  <Typography
                    key={index}
                    variant="h6"
                    component="p"
                    sx={{ fontStyle: 'italic' }}
                  >
                    {line} ({data.syllables[index]})
                  </Typography>
                ))}
              </Paper>
              <Typography
                variant="caption"
                display="block"
                sx={{ mt: 2, color: 'text.secondary' }}
              >
                Generated by: {data.provider_used} ({data.model_used})
              </Typography>
            </Box>
          )}
      </Paper>
    </Box>
  );
};

export default HaikuGeneratorPage;
